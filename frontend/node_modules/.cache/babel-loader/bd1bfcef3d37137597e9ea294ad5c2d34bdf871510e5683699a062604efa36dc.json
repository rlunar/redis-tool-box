{"ast":null,"code":"var _jsxFileName = \"/home/y4n/React_Apps/tool-box/frontend/src/components/ApiCaching.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApiCaching() {\n  _s();\n  const [weather, setWeather] = useState({});\n  const [city, setCity] = useState(\"Seattle\");\n  const fetchWeather = async (fromSource = false) => {\n    try {\n      const response = await axios.get(`http://localhost:3001/weather?city=${city}${fromSource ? '&source=true' : ''}`);\n      setWeather(response.data);\n    } catch (error) {\n      console.error('Failed to fetch weather:', error);\n    }\n  };\n  useEffect(() => {\n    fetchWeather();\n    const interval = setInterval(() => {\n      fetchWeather();\n    }, 10 * 60 * 1000); // Refresh every 10 minutes\n\n    return () => clearInterval(interval);\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather for \", weather.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Temperature: \", weather.main && weather.main.temp, \" K\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Description: \", weather.weather && weather.weather[0] && weather.weather[0].description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchWeather(false),\n      children: \"Get Data from Cache\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchWeather(true),\n      children: \"Get Data from Source API\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: city,\n      onChange: e => setCity(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n_s(ApiCaching, \"YgwCA0yz9/yI0OhvcPYBxhsYmi8=\");\n_c = ApiCaching;\nexport default ApiCaching;\nvar _c;\n$RefreshReg$(_c, \"ApiCaching\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ApiCaching","_s","weather","setWeather","city","setCity","fetchWeather","fromSource","response","get","data","error","console","interval","setInterval","clearInterval","children","name","fileName","_jsxFileName","lineNumber","columnNumber","main","temp","description","onClick","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/home/y4n/React_Apps/tool-box/frontend/src/components/ApiCaching.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction ApiCaching() {\n    const [weather, setWeather] = useState({});\n    const [city, setCity] = useState(\"Seattle\");\n\n    const fetchWeather = async (fromSource = false) => {\n        try {\n            const response = await axios.get(`http://localhost:3001/weather?city=${city}${fromSource ? '&source=true' : ''}`);\n            setWeather(response.data);\n        } catch (error) {\n            console.error('Failed to fetch weather:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchWeather();\n        const interval = setInterval(() => {\n            fetchWeather();\n        }, 10 * 60 * 1000); // Refresh every 10 minutes\n    \n        return () => clearInterval(interval);\n    }, [city]);\n\n    return (\n        <div>\n            <h2>Weather for {weather.name}</h2>\n            <div>Temperature: {weather.main && weather.main.temp} K</div> {/* Note that temperature is in Kelvin by default */}\n            <div>Description: {weather.weather && weather.weather[0] && weather.weather[0].description}</div>\n            <button onClick={() => fetchWeather(false)}>Get Data from Cache</button>\n            <button onClick={() => fetchWeather(true)}>Get Data from Source API</button>\n            <input value={city} onChange={e => setCity(e.target.value)} />\n        </div>\n    );\n}\n\nexport default ApiCaching;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,SAAS,CAAC;EAE3C,MAAMW,YAAY,GAAG,MAAAA,CAAOC,UAAU,GAAG,KAAK,KAAK;IAC/C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAE,sCAAqCL,IAAK,GAAEG,UAAU,GAAG,cAAc,GAAG,EAAG,EAAC,CAAC;MACjHJ,UAAU,CAACK,QAAQ,CAACE,IAAI,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IACpD;EACJ,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZU,YAAY,CAAC,CAAC;IACd,MAAMO,QAAQ,GAAGC,WAAW,CAAC,MAAM;MAC/BR,YAAY,CAAC,CAAC;IAClB,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;IAEpB,OAAO,MAAMS,aAAa,CAACF,QAAQ,CAAC;EACxC,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,oBACIL,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,GAAI,cAAY,EAACd,OAAO,CAACe,IAAI;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnCtB,OAAA;MAAAiB,QAAA,GAAK,eAAa,EAACd,OAAO,CAACoB,IAAI,IAAIpB,OAAO,CAACoB,IAAI,CAACC,IAAI,EAAC,IAAE;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAC9DtB,OAAA;MAAAiB,QAAA,GAAK,eAAa,EAACd,OAAO,CAACA,OAAO,IAAIA,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,IAAIA,OAAO,CAACA,OAAO,CAAC,CAAC,CAAC,CAACsB,WAAW;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACjGtB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAAC,KAAK,CAAE;MAAAU,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxEtB,OAAA;MAAQ0B,OAAO,EAAEA,CAAA,KAAMnB,YAAY,CAAC,IAAI,CAAE;MAAAU,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5EtB,OAAA;MAAO2B,KAAK,EAAEtB,IAAK;MAACuB,QAAQ,EAAEC,CAAC,IAAIvB,OAAO,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEd;AAACpB,EAAA,CAhCQD,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AAkCnB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}