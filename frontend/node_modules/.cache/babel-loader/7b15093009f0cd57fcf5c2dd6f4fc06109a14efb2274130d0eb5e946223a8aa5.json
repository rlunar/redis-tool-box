{"ast":null,"code":"var _jsxFileName = \"/home/y4n/React_Apps/tool-box/frontend/src/components/SeatingMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SeatingMap() {\n  _s();\n  const [bitmap, setBitmap] = useState(0);\n\n  // New state for showing or hiding the code\n  const [showCode, setShowCode] = useState(false);\n\n  // Function to toggle the visibility of the code block\n  const toggleCode = () => {\n    setShowCode(prevState => !prevState);\n  };\n  useEffect(() => {\n    axios.get('http://localhost:3001/seating').then(response => {\n      setBitmap(response.data.bitmap);\n    });\n  }, []);\n  const toggleSeat = seatIndex => {\n    const isSelected = bitmap & 1 << seatIndex;\n    const totalSelected = bitmap.toString(2).split('1').length - 1;\n\n    // If trying to select a new seat while already having 4 selected\n    if (!isSelected && totalSelected === 4) {\n      alert(\"You can't select more than 4 seats!\");\n      return;\n    }\n    axios.post('http://localhost:3001/setSeat', {\n      seatIndex\n    }).then(response => {\n      setBitmap(response.data.bitmap);\n    }).catch(err => {\n      if (err.response && err.response.data && err.response.data.error) {\n        alert(err.response.data.error);\n      } else {\n        alert('An error occurred!');\n      }\n    });\n  };\n  const getSeatColor = index => {\n    const isSelected = bitmap & 1 << index;\n    const totalSelected = bitmap.toString(2).split('1').length - 1;\n    if (isSelected) {\n      return 'âœ…'; // Grey for selected\n    } else if (totalSelected === 4) {\n      return 'ðŸ”’'; // Red for unselected when 4 are selected\n    } else {\n      return 'ðŸ’º'; // Green for unselected\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(4, 1fr)',\n        gap: '10px'\n      },\n      children: Array.from({\n        length: 16\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          fontSize: '24px'\n        },\n        onClick: () => toggleSeat(index),\n        children: getSeatColor(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: bitmap.toString(2).padStart(16, '0').split('').map((bit, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          background: bit === '1' ? 'yellow' : 'white',\n          padding: '5px',\n          border: '1px solid black'\n        },\n        children: bit\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"code-button\",\n        onClick: toggleCode,\n        style: {\n          flex: 1\n        },\n        children: showCode ? \"Hide the Code\" : \"Show the Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), showCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-container\",\n      style: {\n        marginTop: '10px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          style: {\n            marginTop: '10px',\n            width: 'auto',\n            whiteSpace: 'pre-wrap',\n            overflowWrap: 'anywhere'\n          },\n          children: `\napp.get('/weather', async (req, res) => {\n    console.log(\"Received request for weather data.\");\n    const city = req.query.city || 'Seattle';\n\n    if (req.query.source === 'true') {\n        // Fetch directly from OpenWeather API without checking cache\n        try {\n            console.log(\"Fetching data directly from OpenWeather API...\");\n            let weatherResponse = await axios.get(https://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY});\n            res.json(weatherResponse.data);\n            return;\n        } catch (error) {\n            console.error(\"Failed to fetch from OpenWeather API:\", error.message);\n            res.status(500).json({ error: \"Failed to fetch weather data\" });\n            return;\n        }\n    }\n\n    // Check cache first\n    redisClient.get(city, async (err, data) => {\n        if (err) throw err;\n\n        if (data !== null) {\n            console.log(\"Serving data from cache.\");\n            res.json(JSON.parse(data));\n        } else {\n            try {\n                console.log(\"Fetching data from OpenWeather API...\");\n                let weatherResponse = await axios.get(https://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY});\n                redisClient.setex(city, 300, JSON.stringify(weatherResponse.data));\n                res.json(weatherResponse.data);\n            } catch (error) {\n                console.error(\"Failed to fetch from OpenWeather API:\", error.message);\n                res.status(500).json({ error: \"Failed to fetch weather data\" });\n            }\n        }\n    });\n});\n\napp.delete('/cache', (req, res) => {\n    const city = req.query.city;\n\n    redisClient.del(city, (err, reply) => {\n        if (err) {\n            console.error(\"Error clearing cache:\", err);\n            res.status(500).json({ error: \"Failed to clear cache\" });\n            return;\n        }\n        \n        if (reply === 1) {\n            console.log(Cache for {city} cleared);\n            res.json({ message: Cache for {city} cleared });\n        } else {\n            console.log(No cache found for {city});\n            res.status(404).json({ message: No cache found for {city} });\n        }\n    });\n});\n\n                            `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(SeatingMap, \"tPdPY61whwZtk+rHQLV2Oueej4s=\");\n_c = SeatingMap;\nexport default SeatingMap;\nvar _c;\n$RefreshReg$(_c, \"SeatingMap\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SeatingMap","_s","bitmap","setBitmap","showCode","setShowCode","toggleCode","prevState","get","then","response","data","toggleSeat","seatIndex","isSelected","totalSelected","toString","split","length","alert","post","catch","err","error","getSeatColor","index","children","style","display","gridTemplateColumns","gap","Array","from","map","_","fontSize","onClick","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","padStart","bit","background","padding","border","width","justifyContent","className","flex","whiteSpace","overflowWrap","_c","$RefreshReg$"],"sources":["/home/y4n/React_Apps/tool-box/frontend/src/components/SeatingMap.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nfunction SeatingMap() {\n    const [bitmap, setBitmap] = useState(0);\n\n// New state for showing or hiding the code\nconst [showCode, setShowCode] = useState(false);\n\n// Function to toggle the visibility of the code block\nconst toggleCode = () => {\n    setShowCode(prevState => !prevState);\n}\n\n    useEffect(() => {\n        axios.get('http://localhost:3001/seating').then(response => {\n            setBitmap(response.data.bitmap);\n        });\n    }, []);\n\n    const toggleSeat = (seatIndex) => {\n        const isSelected = (bitmap & (1 << seatIndex));\n        const totalSelected = bitmap.toString(2).split('1').length - 1;\n\n        // If trying to select a new seat while already having 4 selected\n        if (!isSelected && totalSelected === 4) {\n            alert(\"You can't select more than 4 seats!\");\n            return;\n        }\n\n        axios.post('http://localhost:3001/setSeat', { seatIndex }).then(response => {\n            setBitmap(response.data.bitmap);\n        }).catch(err => {\n            if (err.response && err.response.data && err.response.data.error) {\n                alert(err.response.data.error);\n            } else {\n                alert('An error occurred!');\n            }\n        });\n    };\n\n    const getSeatColor = (index) => {\n        const isSelected = (bitmap & (1 << index));\n        const totalSelected = bitmap.toString(2).split('1').length - 1;\n        if (isSelected) {\n            return 'âœ…';  // Grey for selected\n        } else if (totalSelected === 4) {\n            return 'ðŸ”’';  // Red for unselected when 4 are selected\n        } else {\n            return 'ðŸ’º';  // Green for unselected\n        }\n    };\n\n    return (\n        <div>\n            <div style={{ display: 'grid', gridTemplateColumns: 'repeat(4, 1fr)', gap: '10px' }}>\n                {Array.from({ length: 16 }).map((_, index) => (\n                    <button key={index} style={{ fontSize: '24px' }} onClick={() => toggleSeat(index)}>\n                        {getSeatColor(index)}\n                    </button>\n                ))}\n            </div>\n            <div style={{ marginTop: '20px' }}>\n                {bitmap.toString(2).padStart(16, '0').split('').map((bit, index) => (\n                    <span key={index} style={{ background: bit === '1' ? 'yellow' : 'white', padding: '5px', border: '1px solid black' }}>\n                        {bit}\n                    </span>\n                ))}\n            </div>\n            {/* Show/Hide Code button */}\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-start', marginTop: '10px' }}>\n        <button className=\"code-button\" onClick={toggleCode} style={{ flex: 1 }}>\n          {showCode ? \"Hide the Code\" : \"Show the Code\"}\n        </button>\n      </div>\n  \n      {showCode && (\n        <div className=\"code-container\" style={{ marginTop: '10px',width: '100%' }}>\n        <pre>\n            <code style={{ marginTop: '10px',width: 'auto', whiteSpace: 'pre-wrap', overflowWrap: 'anywhere'  }}>\n                            {`\napp.get('/weather', async (req, res) => {\n    console.log(\"Received request for weather data.\");\n    const city = req.query.city || 'Seattle';\n\n    if (req.query.source === 'true') {\n        // Fetch directly from OpenWeather API without checking cache\n        try {\n            console.log(\"Fetching data directly from OpenWeather API...\");\n            let weatherResponse = await axios.get(https://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY});\n            res.json(weatherResponse.data);\n            return;\n        } catch (error) {\n            console.error(\"Failed to fetch from OpenWeather API:\", error.message);\n            res.status(500).json({ error: \"Failed to fetch weather data\" });\n            return;\n        }\n    }\n\n    // Check cache first\n    redisClient.get(city, async (err, data) => {\n        if (err) throw err;\n\n        if (data !== null) {\n            console.log(\"Serving data from cache.\");\n            res.json(JSON.parse(data));\n        } else {\n            try {\n                console.log(\"Fetching data from OpenWeather API...\");\n                let weatherResponse = await axios.get(https://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY});\n                redisClient.setex(city, 300, JSON.stringify(weatherResponse.data));\n                res.json(weatherResponse.data);\n            } catch (error) {\n                console.error(\"Failed to fetch from OpenWeather API:\", error.message);\n                res.status(500).json({ error: \"Failed to fetch weather data\" });\n            }\n        }\n    });\n});\n\napp.delete('/cache', (req, res) => {\n    const city = req.query.city;\n\n    redisClient.del(city, (err, reply) => {\n        if (err) {\n            console.error(\"Error clearing cache:\", err);\n            res.status(500).json({ error: \"Failed to clear cache\" });\n            return;\n        }\n        \n        if (reply === 1) {\n            console.log(Cache for {city} cleared);\n            res.json({ message: Cache for {city} cleared });\n        } else {\n            console.log(No cache found for {city});\n            res.status(404).json({ message: No cache found for {city} });\n        }\n    });\n});\n\n                            `}\n                        </code>\n                    </pre>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default SeatingMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}