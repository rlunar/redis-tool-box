{"ast":null,"code":"var _jsxFileName = \"/home/y4n/React_Apps/tool-box/frontend/src/components/apicaching.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApiCaching() {\n  _s();\n  const [weather, setWeather] = useState({});\n  const [city, setCity] = useState(\"New York\");\n  const [showCode, setShowCode] = useState(false);\n  const fetchWeather = async (forceRefresh = false) => {\n    try {\n      const response = await axios.get(`/weather?city=${city}${forceRefresh ? '&forceRefresh=true' : ''}`);\n      setWeather(response.data);\n    } catch (error) {\n      console.error('Failed to fetch weather:', error);\n    }\n  };\n  useEffect(() => {\n    fetchWeather();\n    const interval = setInterval(() => {\n      fetchWeather();\n    }, 5 * 60 * 1000); // Refresh every 5 minutes\n\n    return () => clearInterval(interval);\n  }, [city]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather for \", weather.city]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Temperature: \", weather.temperature, \" \\xB0C\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Description: \", weather.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Last fetched: \", weather.timestamp]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchWeather(true),\n      children: \"Refresh Weather\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: city,\n      onChange: e => setCity(e.target.value),\n      placeholder: \"Enter city\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowCode(prev => !prev),\n      children: showCode ? \"Hide Code\" : \"Show Code\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), showCode && /*#__PURE__*/_jsxDEV(\"pre\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(ApiCaching, \"bmiFLdSglKOYCRcWtxH/mB+Bwq4=\");\n_c = ApiCaching;\nexport default ApiCaching;\nvar _c;\n$RefreshReg$(_c, \"ApiCaching\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ApiCaching","_s","weather","setWeather","city","setCity","showCode","setShowCode","fetchWeather","forceRefresh","response","get","data","error","console","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","description","timestamp","onClick","value","onChange","e","target","placeholder","prev","_c","$RefreshReg$"],"sources":["/home/y4n/React_Apps/tool-box/frontend/src/components/apicaching.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction ApiCaching() {\n    const [weather, setWeather] = useState({});\n    const [city, setCity] = useState(\"New York\");\n    const [showCode, setShowCode] = useState(false);\n\n    const fetchWeather = async (forceRefresh = false) => {\n        try {\n            const response = await axios.get(`/weather?city=${city}${forceRefresh ? '&forceRefresh=true' : ''}`);\n            setWeather(response.data);\n        } catch (error) {\n            console.error('Failed to fetch weather:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchWeather();\n        const interval = setInterval(() => {\n            fetchWeather();\n        }, 5 * 60 * 1000); // Refresh every 5 minutes\n\n        return () => clearInterval(interval);\n    }, [city]);\n\n    return (\n        <div>\n            <h2>Weather for {weather.city}</h2>\n            <div>Temperature: {weather.temperature} Â°C</div>\n            <div>Description: {weather.description}</div>\n            <div>Last fetched: {weather.timestamp}</div>\n            <button onClick={() => fetchWeather(true)}>Refresh Weather</button>\n            <input value={city} onChange={(e) => setCity(e.target.value)} placeholder=\"Enter city\" />\n            \n            <button onClick={() => setShowCode(prev => !prev)}>\n                {showCode ? \"Hide Code\" : \"Show Code\"}\n            </button>\n            {showCode && (\n                <pre>\n                    {/* Add your server-side and component code here for display */}\n                </pre>\n            )}\n        </div>\n    );\n}\n\nexport default ApiCaching;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}