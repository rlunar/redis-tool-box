{"ast":null,"code":"var _jsxFileName = \"/home/y4n/React_Apps/tool-box/frontend/src/components/GeoSpatialMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\nconst defaultCenter = {\n  lat: 40.730610,\n  // Coordinates for New York City\n  lng: -73.935242\n};\nfunction GeoSpatialMap() {\n  _s();\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const handleMapClick = event => {\n    setSelectedLocation({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n  const handleValidateCoordinates = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/storeCoordinates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(selectedLocation)\n      });\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error storing coordinates:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyAuNDT3WDS6bqTHVfW563NKP9HIPQ1E2Dc\",\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: defaultCenter,\n      zoom: 10,\n      onClick: handleMapClick,\n      children: selectedLocation && /*#__PURE__*/_jsxDEV(Marker, {\n        position: selectedLocation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 30\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), selectedLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Selected Coordinates: Latitude: \", selectedLocation.lat.toFixed(6), \", Longitude: \", selectedLocation.lng.toFixed(6)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidateCoordinates,\n        children: \"Validate Coordinates\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(GeoSpatialMap, \"pGedlDpRVZiPTL4140bC/BFKe+Y=\");\n_c = GeoSpatialMap;\nexport default _c2 = /*#__PURE__*/React.memo(GeoSpatialMap);\nvar _c, _c2;\n$RefreshReg$(_c, \"GeoSpatialMap\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","defaultCenter","lat","lng","GeoSpatialMap","_s","selectedLocation","setSelectedLocation","handleMapClick","event","latLng","handleValidateCoordinates","response","fetch","method","headers","body","JSON","stringify","data","json","console","log","error","googleMapsApiKey","children","mapContainerStyle","center","zoom","onClick","position","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","_c","_c2","memo","$RefreshReg$"],"sources":["/home/y4n/React_Apps/tool-box/frontend/src/components/GeoSpatialMap.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\n\nconst containerStyle = {\n  width: '400px',\n  height: '400px'\n};\n\nconst defaultCenter = {\n  lat: 40.730610,  // Coordinates for New York City\n  lng: -73.935242\n};\n\nfunction GeoSpatialMap() {\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  const handleMapClick = (event) => {\n    setSelectedLocation({\n      lat: event.latLng.lat(),\n      lng: event.latLng.lng()\n    });\n  };\n\n  const handleValidateCoordinates = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/api/storeCoordinates', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(selectedLocation),\n      });\n\n      const data = await response.json();\n      console.log(data);\n    } catch (error) {\n      console.error(\"Error storing coordinates:\", error);\n    }\n  };\n\n  return (\n    <LoadScript googleMapsApiKey=\"AIzaSyAuNDT3WDS6bqTHVfW563NKP9HIPQ1E2Dc\">\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={defaultCenter}\n        zoom={10}\n        onClick={handleMapClick}\n      >\n        {selectedLocation && <Marker position={selectedLocation} />}\n      </GoogleMap>\n      {selectedLocation && (\n        <div>\n          <p>\n            Selected Coordinates: \n            Latitude: {selectedLocation.lat.toFixed(6)}, \n            Longitude: {selectedLocation.lng.toFixed(6)}\n          </p>\n          <button onClick={handleValidateCoordinates}>\n            Validate Coordinates\n          </button>\n        </div>\n      )}\n    </LoadScript>\n  );\n}\n\nexport default React.memo(GeoSpatialMap);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}