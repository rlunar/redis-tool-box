{"ast":null,"code":"var _jsxFileName = \"/home/y4n/React_Apps/tool-box/frontend/src/components/Monitor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatDateWithMilliseconds = timestampInSeconds => {\n  const date = new Date(timestampInSeconds * 1000);\n  return `${date.toLocaleDateString()} ${date.toLocaleTimeString('en-US', {\n    hour12: false\n  })}.${date.getMilliseconds().toString().padStart(3, '0')}`;\n};\nconst titleStyle = {\n  borderBottom: '2px solid #3498db',\n  paddingBottom: '10px',\n  marginTop: '20px',\n  margin: '20px'\n};\nfunction Monitor() {\n  _s();\n  console.log(\"Monitor rendered\"); // <-- Add this line here\n\n  const [commands, setCommands] = useState([]);\n  const wsRef = useRef();\n\n  // New state for showing or hiding the code\n  const [showCode, setShowCode] = useState(false);\n\n  // Function to toggle the visibility of the code block\n  const toggleCode = () => {\n    setShowCode(prevState => !prevState);\n  };\n  useEffect(() => {\n    if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n      // If the WebSocket is already open, don't try to open another connection.\n      return;\n    }\n    setTimeout(() => {\n      wsRef.current = new WebSocket('ws://localhost:3002');\n      wsRef.current.onopen = () => {\n        console.log('WebSocket connected.');\n      };\n      wsRef.current.onmessage = message => {\n        const {\n          time,\n          args\n        } = JSON.parse(message.data);\n        console.log(`Received command from server: ${args}`);\n        const formattedCommand = `${formatDateWithMilliseconds(time)} - ${args.join(' ')}`;\n        setCommands(prevCommands => {\n          const newCommands = [...prevCommands, formattedCommand];\n          return newCommands.slice(-9); // keep only the last 9 commands\n        });\n      };\n\n      wsRef.current.onerror = error => {\n        console.error(`WebSocket Error: ${error}`);\n      };\n      wsRef.current.onclose = () => {\n        console.log('WebSocket closed.');\n      };\n      return () => {\n        if (wsRef.current) {\n          wsRef.current.close();\n        }\n      };\n    }, 1000); // waits 1 second before attempting to connect\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: titleStyle,\n      children: \"Output of the Redis Monitor Command\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"terminal\",\n        style: {\n          width: 'auto',\n          whiteSpace: 'pre-wrap',\n          overflowWrap: 'anywhere'\n        },\n        children: commands.map((command, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"command\",\n          children: command\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 'auto',\n          display: 'flex',\n          justifyContent: 'flex-start',\n          marginTop: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"code-button\",\n          onClick: toggleCode,\n          style: {\n            flex: 1\n          },\n          children: showCode ? \"Hide the Code\" : \"Show the Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), showCode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"code-container\",\n        style: {\n          marginTop: '10px',\n          width: 'auto',\n          whiteSpace: 'pre-wrap',\n          overflowWrap: 'anywhere'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            style: {\n              marginTop: '10px',\n              width: 'auto',\n              whiteSpace: 'pre-wrap',\n              overflowWrap: 'anywhere'\n            },\n            children: `\n/// wss.on('connection', (ws) => {\n    console.log('Client connected.');\n\n    const redis = new Redis();\n\n    redis.monitor((err, monitor) => {\n        if (err) throw err;\n\n        console.log('Connected to Redis.');\n\n        monitor.on('monitor', (time, args, source, database) => {\n            ws.send(JSON.stringify(args));\n        });\n    });\n\n    ws.on('close', () => {\n        console.log('Client disconnected.');\n        redis.disconnect();\n    });\n}); */}\n                        </code>\n                    </pre>\n                </div>\n            )}\n        </div>\n    );\n\n    `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(Monitor, \"yvXJFIIzHF5YStMsR7VHGyitPK8=\");\n_c = Monitor;\nexport default Monitor;\nvar _c;\n$RefreshReg$(_c, \"Monitor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","formatDateWithMilliseconds","timestampInSeconds","date","Date","toLocaleDateString","toLocaleTimeString","hour12","getMilliseconds","toString","padStart","titleStyle","borderBottom","paddingBottom","marginTop","margin","Monitor","_s","console","log","commands","setCommands","wsRef","showCode","setShowCode","toggleCode","prevState","current","readyState","WebSocket","OPEN","setTimeout","onopen","onmessage","message","time","args","JSON","parse","data","formattedCommand","join","prevCommands","newCommands","slice","onerror","error","onclose","close","children","style","fileName","_jsxFileName","lineNumber","columnNumber","className","width","whiteSpace","overflowWrap","map","command","index","display","justifyContent","onClick","flex","_c","$RefreshReg$"],"sources":["/home/y4n/React_Apps/tool-box/frontend/src/components/Monitor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nconst formatDateWithMilliseconds = (timestampInSeconds) => {\n    const date = new Date(timestampInSeconds * 1000);\n    return `${date.toLocaleDateString()} ${date.toLocaleTimeString('en-US', { hour12: false })}.${date.getMilliseconds().toString().padStart(3, '0')}`;\n}\n\n\nconst titleStyle = {\n    borderBottom: '2px solid #3498db',\n    paddingBottom: '10px',\n    marginTop: '20px',\n    margin: '20px'\n\n};\n\nfunction Monitor() {\n    console.log(\"Monitor rendered\");  // <-- Add this line here\n\n    const [commands, setCommands] = useState([]);\n    const wsRef = useRef();\n\n// New state for showing or hiding the code\nconst [showCode, setShowCode] = useState(false);\n\n// Function to toggle the visibility of the code block\nconst toggleCode = () => {\n    setShowCode(prevState => !prevState);\n}\n\n\n    useEffect(() => {\n        if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n            // If the WebSocket is already open, don't try to open another connection.\n            return;\n        }\n        setTimeout(() => {\n        wsRef.current = new WebSocket('ws://localhost:3002');\n\n        wsRef.current.onopen = () => {\n            console.log('WebSocket connected.');\n        };\n\n        wsRef.current.onmessage = (message) => {\n            const { time, args } = JSON.parse(message.data);\n            console.log(`Received command from server: ${args}`);\n            const formattedCommand = `${formatDateWithMilliseconds(time)} - ${args.join(' ')}`;\n            setCommands(prevCommands => {\n                const newCommands = [...prevCommands, formattedCommand];\n                return newCommands.slice(-9);  // keep only the last 9 commands\n            });\n        };\n        \n\n        wsRef.current.onerror = (error) => {\n            console.error(`WebSocket Error: ${error}`);\n        };\n\n        wsRef.current.onclose = () => {\n            console.log('WebSocket closed.');\n        };\n\n        return () => {\n            if (wsRef.current) {\n                wsRef.current.close();\n            }\n        }}, 1000); // waits 1 second before attempting to connect\n    }, []);\n\n    return (\n        <div>\n        <h3 style={titleStyle}>Output of the Redis Monitor Command</h3>\n   \n        <div>\n            <div className=\"terminal\" style={{ width: 'auto', whiteSpace: 'pre-wrap', overflowWrap: 'anywhere'}}>\n                {commands.map((command, index) => (\n                    <div className=\"command\" key={index}>{command}</div>\n                ))}\n            </div>\n            <div style={{ width: 'auto', display: 'flex', justifyContent: 'flex-start', marginTop: '10px' }}>\n            <button className=\"code-button\" onClick={toggleCode} style={{ flex: 1 }}>\n          {showCode ? \"Hide the Code\" : \"Show the Code\"}\n            </button>\n            </div>\n            {showCode && (\n        <div className=\"code-container\" style={{ marginTop: '10px',width: 'auto', whiteSpace: 'pre-wrap', overflowWrap: 'anywhere'  }}>\n        <pre>\n                    <code style={{ marginTop: '10px',width: 'auto', whiteSpace: 'pre-wrap', overflowWrap: 'anywhere'  }}>\n                            {`\n/// wss.on('connection', (ws) => {\n    console.log('Client connected.');\n\n    const redis = new Redis();\n\n    redis.monitor((err, monitor) => {\n        if (err) throw err;\n\n        console.log('Connected to Redis.');\n\n        monitor.on('monitor', (time, args, source, database) => {\n            ws.send(JSON.stringify(args));\n        });\n    });\n\n    ws.on('close', () => {\n        console.log('Client disconnected.');\n        redis.disconnect();\n    });\n}); */}\n                        </code>\n                    </pre>\n                </div>\n            )}\n        </div>\n    );\n\n    `}\n    </code>\n</pre>\n</div>\n)}\n</div>\n</div>\n);\n}\n\nexport default Monitor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,0BAA0B,GAAIC,kBAAkB,IAAK;EACvD,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,kBAAkB,GAAG,IAAI,CAAC;EAChD,OAAQ,GAAEC,IAAI,CAACE,kBAAkB,CAAC,CAAE,IAAGF,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;IAAEC,MAAM,EAAE;EAAM,CAAC,CAAE,IAAGJ,IAAI,CAACK,eAAe,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,EAAC;AACtJ,CAAC;AAGD,MAAMC,UAAU,GAAG;EACfC,YAAY,EAAE,mBAAmB;EACjCC,aAAa,EAAE,MAAM;EACrBC,SAAS,EAAE,MAAM;EACjBC,MAAM,EAAE;AAEZ,CAAC;AAED,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACfC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC,CAAC,CAAE;;EAElC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM0B,KAAK,GAAGxB,MAAM,CAAC,CAAC;;EAE1B;EACA,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAM6B,UAAU,GAAGA,CAAA,KAAM;IACrBD,WAAW,CAACE,SAAS,IAAI,CAACA,SAAS,CAAC;EACxC,CAAC;EAGG7B,SAAS,CAAC,MAAM;IACZ,IAAIyB,KAAK,CAACK,OAAO,IAAIL,KAAK,CAACK,OAAO,CAACC,UAAU,KAAKC,SAAS,CAACC,IAAI,EAAE;MAC9D;MACA;IACJ;IACAC,UAAU,CAAC,MAAM;MACjBT,KAAK,CAACK,OAAO,GAAG,IAAIE,SAAS,CAAC,qBAAqB,CAAC;MAEpDP,KAAK,CAACK,OAAO,CAACK,MAAM,GAAG,MAAM;QACzBd,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACvC,CAAC;MAEDG,KAAK,CAACK,OAAO,CAACM,SAAS,GAAIC,OAAO,IAAK;QACnC,MAAM;UAAEC,IAAI;UAAEC;QAAK,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACJ,OAAO,CAACK,IAAI,CAAC;QAC/CrB,OAAO,CAACC,GAAG,CAAE,iCAAgCiB,IAAK,EAAC,CAAC;QACpD,MAAMI,gBAAgB,GAAI,GAAEvC,0BAA0B,CAACkC,IAAI,CAAE,MAAKC,IAAI,CAACK,IAAI,CAAC,GAAG,CAAE,EAAC;QAClFpB,WAAW,CAACqB,YAAY,IAAI;UACxB,MAAMC,WAAW,GAAG,CAAC,GAAGD,YAAY,EAAEF,gBAAgB,CAAC;UACvD,OAAOG,WAAW,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;QACnC,CAAC,CAAC;MACN,CAAC;;MAGDtB,KAAK,CAACK,OAAO,CAACkB,OAAO,GAAIC,KAAK,IAAK;QAC/B5B,OAAO,CAAC4B,KAAK,CAAE,oBAAmBA,KAAM,EAAC,CAAC;MAC9C,CAAC;MAEDxB,KAAK,CAACK,OAAO,CAACoB,OAAO,GAAG,MAAM;QAC1B7B,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MACpC,CAAC;MAED,OAAO,MAAM;QACT,IAAIG,KAAK,CAACK,OAAO,EAAE;UACfL,KAAK,CAACK,OAAO,CAACqB,KAAK,CAAC,CAAC;QACzB;MACJ,CAAC;IAAA,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIhD,OAAA;IAAAiD,QAAA,gBACAjD,OAAA;MAAIkD,KAAK,EAAEvC,UAAW;MAAAsC,QAAA,EAAC;IAAmC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE/DtD,OAAA;MAAAiD,QAAA,gBACIjD,OAAA;QAAKuD,SAAS,EAAC,UAAU;QAACL,KAAK,EAAE;UAAEM,KAAK,EAAE,MAAM;UAAEC,UAAU,EAAE,UAAU;UAAEC,YAAY,EAAE;QAAU,CAAE;QAAAT,QAAA,EAC/F7B,QAAQ,CAACuC,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBACzB7D,OAAA;UAAKuD,SAAS,EAAC,SAAS;UAAAN,QAAA,EAAcW;QAAO,GAAfC,KAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgB,CACtD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eACNtD,OAAA;QAAKkD,KAAK,EAAE;UAAEM,KAAK,EAAE,MAAM;UAAEM,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,YAAY;UAAEjD,SAAS,EAAE;QAAO,CAAE;QAAAmC,QAAA,eAChGjD,OAAA;UAAQuD,SAAS,EAAC,aAAa;UAACS,OAAO,EAAEvC,UAAW;UAACyB,KAAK,EAAE;YAAEe,IAAI,EAAE;UAAE,CAAE;UAAAhB,QAAA,EACzE1B,QAAQ,GAAG,eAAe,GAAG;QAAe;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,EACL/B,QAAQ,iBACbvB,OAAA;QAAKuD,SAAS,EAAC,gBAAgB;QAACL,KAAK,EAAE;UAAEpC,SAAS,EAAE,MAAM;UAAC0C,KAAK,EAAE,MAAM;UAAEC,UAAU,EAAE,UAAU;UAAEC,YAAY,EAAE;QAAY,CAAE;QAAAT,QAAA,eAC9HjD,OAAA;UAAAiD,QAAA,eACYjD,OAAA;YAAMkD,KAAK,EAAE;cAAEpC,SAAS,EAAE,MAAM;cAAC0C,KAAK,EAAE,MAAM;cAAEC,UAAU,EAAE,UAAU;cAAEC,YAAY,EAAE;YAAY,CAAE;YAAAT,QAAA,EAC1F;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEN;AAACrC,EAAA,CA5GQD,OAAO;AAAAkD,EAAA,GAAPlD,OAAO;AA8GhB,eAAeA,OAAO;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}