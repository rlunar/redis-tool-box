{"ast":null,"code":"var _jsxFileName = \"/home/y4n/React_Apps/tool-box/frontend/src/components/GeoSpatialMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GeoSpatialMap(props) {\n  _s();\n  const [position, setPosition] = useState(null);\n  const [nearbyStations, setNearbyStations] = useState([]);\n  const handleClick = e => {\n    setPosition([e.latlng.lat, e.latlng.lng]);\n  };\n  const handleValidate = async () => {\n    if (position) {\n      const response = await fetch('http://localhost:3001/save-coordinate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          coordinates: position\n        })\n      });\n      const data = await response.json();\n      console.log(data); // Handle the server response here\n    }\n  };\n\n  const searchNearby = async () => {\n    if (position) {\n      const response = await fetch(`http://localhost:3001/search-nearby?lat=${position[0]}&lon=${position[1]}`);\n      const data = await response.json();\n      setNearbyStations(data.stations);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 13,\n      style: {\n        width: '100%',\n        height: '500px'\n      },\n      onClick: handleClick,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), position && /*#__PURE__*/_jsxDEV(Marker, {\n        position: position\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 30\n      }, this), nearbyStations.map(station => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [station.lat, station.lon],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [station.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 43\n          }, this), \"Distance: \", station.distance, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this)\n      }, station.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleValidate,\n        children: \"Validate Coordinate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: searchNearby,\n        children: \"Search Nearby Stations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(GeoSpatialMap, \"YBjGs7yVdrDNHphuxkKfkpOdALU=\");\n_c = GeoSpatialMap;\nexport default GeoSpatialMap;\nvar _c;\n$RefreshReg$(_c, \"GeoSpatialMap\");","map":{"version":3,"names":["React","useState","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","GeoSpatialMap","props","_s","position","setPosition","nearbyStations","setNearbyStations","handleClick","e","latlng","lat","lng","handleValidate","response","fetch","method","headers","body","JSON","stringify","coordinates","data","json","console","log","searchNearby","stations","children","center","zoom","style","width","height","onClick","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","station","lon","name","distance","id","_c","$RefreshReg$"],"sources":["/home/y4n/React_Apps/tool-box/frontend/src/components/GeoSpatialMap.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\n\nfunction GeoSpatialMap(props) {\n    const [position, setPosition] = useState(null);\n    const [nearbyStations, setNearbyStations] = useState([]);\n\n    const handleClick = (e) => {\n        setPosition([e.latlng.lat, e.latlng.lng]);\n    };\n\n    const handleValidate = async () => {\n        if (position) {\n            const response = await fetch('http://localhost:3001/save-coordinate', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ coordinates: position })\n            });\n\n            const data = await response.json();\n            console.log(data); // Handle the server response here\n        }\n    };\n\n    const searchNearby = async () => {\n        if (position) {\n            const response = await fetch(`http://localhost:3001/search-nearby?lat=${position[0]}&lon=${position[1]}`);\n            const data = await response.json();\n            setNearbyStations(data.stations);\n        }\n    };\n\n    return (\n        <div>\n            <MapContainer center={[51.505, -0.09]} zoom={13} style={{ width: '100%', height: '500px' }} onClick={handleClick}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {position && <Marker position={position}></Marker>}\n                {nearbyStations.map(station => (\n                    <Marker key={station.id} position={[station.lat, station.lon]}>\n                        <Popup>\n                            {station.name}<br />Distance: {station.distance} km\n                        </Popup>\n                    </Marker>\n                ))}\n            </MapContainer>\n            <div>\n                <button onClick={handleValidate}>Validate Coordinate</button>\n                <button onClick={searchNearby}>Search Nearby Stations</button>\n            </div>\n        </div>\n    );\n}\n\nexport default GeoSpatialMap;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}