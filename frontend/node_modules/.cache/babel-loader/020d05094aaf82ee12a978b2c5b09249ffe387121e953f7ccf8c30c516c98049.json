{"ast":null,"code":"var _jsxFileName = \"/home/y4n/React_Apps/tool-box/frontend/src/components/Monitor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Monitor() {\n  _s();\n  const [commands, setCommands] = useState([]);\n  const wsRef = useRef();\n  useEffect(() => {\n    setTimeout(() => {\n      wsRef.current = new WebSocket('ws://localhost:3002');\n      wsRef.current.onopen = () => {\n        console.log('WebSocket connected.');\n      };\n      wsRef.current.onmessage = message => {\n        const command = JSON.parse(message.data);\n        console.log(`Received command from server: ${command}`);\n        setCommands(prevCommands => {\n          const newCommands = [...prevCommands, command.join(' ')];\n          return newCommands.slice(-9); // keep only the last 10 commands\n        });\n      };\n\n      wsRef.current.onerror = error => {\n        console.error(`WebSocket Error: ${error}`);\n      };\n      wsRef.current.onclose = () => {\n        console.log('WebSocket closed.');\n      };\n      return () => {\n        if (wsRef.current) {\n          wsRef.current.close();\n        }\n      };\n    }, 1000); // waits 1 second before attempting to connect\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"terminal\",\n    style: {\n      width: '60%'\n    },\n    children: commands.map((command, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"command\",\n      children: command\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(Monitor, \"JqBwxSi3GLvMdV5WZiC3bZAyhI8=\");\n_c = Monitor;\nexport default Monitor;\nvar _c;\n$RefreshReg$(_c, \"Monitor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Monitor","_s","commands","setCommands","wsRef","setTimeout","current","WebSocket","onopen","console","log","onmessage","message","command","JSON","parse","data","prevCommands","newCommands","join","slice","onerror","error","onclose","close","className","style","width","children","map","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/y4n/React_Apps/tool-box/frontend/src/components/Monitor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\n\nfunction Monitor() {\n    const [commands, setCommands] = useState([]);\n    const wsRef = useRef();\n\n    useEffect(() => {\n        setTimeout(() => {\n        wsRef.current = new WebSocket('ws://localhost:3002');\n\n        wsRef.current.onopen = () => {\n            console.log('WebSocket connected.');\n        };\n\n        wsRef.current.onmessage = (message) => {\n            const command = JSON.parse(message.data);\n            console.log(`Received command from server: ${command}`);\n            setCommands(prevCommands => {\n                const newCommands = [...prevCommands, command.join(' ')];\n                return newCommands.slice(-9);  // keep only the last 10 commands\n            });\n        };        \n\n        wsRef.current.onerror = (error) => {\n            console.error(`WebSocket Error: ${error}`);\n        };\n\n        wsRef.current.onclose = () => {\n            console.log('WebSocket closed.');\n        };\n\n        return () => {\n            if (wsRef.current) {\n                wsRef.current.close();\n            }\n        }}, 1000); // waits 1 second before attempting to connect\n    }, []);\n\n    return (\n        <div className=\"terminal\" style={{ width: '60%'}}>\n            {commands.map((command, index) => (\n                <div className=\"command\" key={index}>{command}</div>\n            ))}\n        </div>\n    );\n}\n\nexport default Monitor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMS,KAAK,GAAGP,MAAM,CAAC,CAAC;EAEtBD,SAAS,CAAC,MAAM;IACZS,UAAU,CAAC,MAAM;MACjBD,KAAK,CAACE,OAAO,GAAG,IAAIC,SAAS,CAAC,qBAAqB,CAAC;MAEpDH,KAAK,CAACE,OAAO,CAACE,MAAM,GAAG,MAAM;QACzBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACvC,CAAC;MAEDN,KAAK,CAACE,OAAO,CAACK,SAAS,GAAIC,OAAO,IAAK;QACnC,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,IAAI,CAAC;QACxCP,OAAO,CAACC,GAAG,CAAE,iCAAgCG,OAAQ,EAAC,CAAC;QACvDV,WAAW,CAACc,YAAY,IAAI;UACxB,MAAMC,WAAW,GAAG,CAAC,GAAGD,YAAY,EAAEJ,OAAO,CAACM,IAAI,CAAC,GAAG,CAAC,CAAC;UACxD,OAAOD,WAAW,CAACE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;QACnC,CAAC,CAAC;MACN,CAAC;;MAEDhB,KAAK,CAACE,OAAO,CAACe,OAAO,GAAIC,KAAK,IAAK;QAC/Bb,OAAO,CAACa,KAAK,CAAE,oBAAmBA,KAAM,EAAC,CAAC;MAC9C,CAAC;MAEDlB,KAAK,CAACE,OAAO,CAACiB,OAAO,GAAG,MAAM;QAC1Bd,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MACpC,CAAC;MAED,OAAO,MAAM;QACT,IAAIN,KAAK,CAACE,OAAO,EAAE;UACfF,KAAK,CAACE,OAAO,CAACkB,KAAK,CAAC,CAAC;QACzB;MACJ,CAAC;IAAA,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIzB,OAAA;IAAK0B,SAAS,EAAC,UAAU;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAK,CAAE;IAAAC,QAAA,EAC5C1B,QAAQ,CAAC2B,GAAG,CAAC,CAAChB,OAAO,EAAEiB,KAAK,kBACzB/B,OAAA;MAAK0B,SAAS,EAAC,SAAS;MAAAG,QAAA,EAAcf;IAAO,GAAfiB,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACjC,EAAA,CA3CQD,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AA6ChB,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}