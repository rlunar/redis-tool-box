{"ast":null,"code":"var _jsxFileName = \"/home/y4n/React_Apps/tool-box/frontend/src/components/ApiCaching.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApiCaching() {\n  _s();\n  const [weather, setWeather] = useState({});\n  const [city, setCity] = useState(\"Moscow\"); // default to the capital of Russia\n  const [responseTime, setResponseTime] = useState(null);\n  const cities = [\"Moscow\",\n  // Russia\n  \"Ottawa\",\n  // Canada\n  \"Beijing\",\n  // China\n  \"New Delhi\",\n  // India\n  \"Canberra\",\n  // Australia\n  \"Brasília\",\n  // Brazil\n  \"Astana\",\n  // Kazakhstan\n  \"Buenos Aires\",\n  // Argentina\n  \"Algiers\",\n  // Algeria\n  \"Riyadh\" // Saudi Arabia\n  ];\n\n  const fetchWeather = async (fromSource = false) => {\n    const startTime = new Date().getTime();\n    try {\n      const response = await axios.get(`http://localhost:3001/weather?city=${city}${fromSource ? '&source=true' : ''}`);\n      const endTime = new Date().getTime();\n      setResponseTime(endTime - startTime);\n      setWeather(response.data);\n    } catch (error) {\n      console.error('Failed to fetch weather:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Weather for \", weather.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Temperature: \", weather.main && weather.main.temp, \" K\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Description: \", weather.weather && weather.weather[0] && weather.weather[0].description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Response Time: \", responseTime, \" ms\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: city,\n        onChange: e => setCity(e.target.value),\n        children: cities.map(cityName => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cityName,\n          children: cityName\n        }, cityName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchWeather(false),\n        children: \"Get Data from Cache\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchWeather(true),\n        children: \"Get Data from Source API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'flex-start',\n        marginTop: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"code-button\",\n        onClick: toggleCode,\n        style: {\n          flex: 1\n        },\n        children: showCode ? \"Hide the Code\" : \"Show the Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), showCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-container\",\n      style: {\n        marginTop: '10px',\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          style: {\n            marginTop: '10px',\n            width: 'auto',\n            whiteSpace: 'pre-wrap',\n            overflowWrap: 'anywhere'\n          },\n          children: `\n// Fetch the counter value from Redis\napp.get('/counter', (req, res) => {\n    client.get('counter', (err, reply) => {\n        if (err) return res.status(500).json({ error: 'Failed to fetch counter' });\n        res.json({ value: parseInt(reply || '0', 10) });\n    });\n});\n\n// Increment the counter using Redis INCR\napp.post('/increment', (req, res) => {\n    client.incr('counter', (err, reply) => {\n        if (err) return res.status(500).json({ error: 'Failed to increment counter' });\n        res.json({ value: parseInt(reply, 10) });\n    });\n});\n\n// Decrement the counter using Redis DECR\napp.post('/decrement', (req, res) => {\n    client.decr('counter', (err, reply) => {\n        if (err) return res.status(500).json({ error: 'Failed to decrement counter' });\n        res.json({ value: parseInt(reply, 10) });\n    });\n});\n\n                            `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n_s(ApiCaching, \"Ho8kOnK6sFY55Fyjwlgh9eXZDwc=\");\n_c = ApiCaching;\nexport default ApiCaching;\nvar _c;\n$RefreshReg$(_c, \"ApiCaching\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ApiCaching","_s","weather","setWeather","city","setCity","responseTime","setResponseTime","cities","fetchWeather","fromSource","startTime","Date","getTime","response","get","endTime","data","error","console","children","name","fileName","_jsxFileName","lineNumber","columnNumber","main","temp","description","value","onChange","e","target","map","cityName","onClick","style","width","display","justifyContent","marginTop","className","toggleCode","flex","showCode","whiteSpace","overflowWrap","_c","$RefreshReg$"],"sources":["/home/y4n/React_Apps/tool-box/frontend/src/components/ApiCaching.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\n\n\nfunction ApiCaching() {\n    const [weather, setWeather] = useState({});\n    const [city, setCity] = useState(\"Moscow\"); // default to the capital of Russia\n    const [responseTime, setResponseTime] = useState(null);\n\n    const cities = [\n        \"Moscow\",       // Russia\n        \"Ottawa\",       // Canada\n        \"Beijing\",      // China\n        \"New Delhi\",    // India\n        \"Canberra\",     // Australia\n        \"Brasília\",     // Brazil\n        \"Astana\",       // Kazakhstan\n        \"Buenos Aires\", // Argentina\n        \"Algiers\",      // Algeria\n        \"Riyadh\"        // Saudi Arabia\n    ];\n\n    const fetchWeather = async (fromSource = false) => {\n        const startTime = new Date().getTime();\n\n        try {\n            const response = await axios.get(`http://localhost:3001/weather?city=${city}${fromSource ? '&source=true' : ''}`);\n            \n            const endTime = new Date().getTime();\n            setResponseTime(endTime - startTime);\n\n            setWeather(response.data);\n        } catch (error) {\n            console.error('Failed to fetch weather:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Weather for {weather.name}</h2>\n            <div>Temperature: {weather.main && weather.main.temp} K</div>\n            <div>Description: {weather.weather && weather.weather[0] && weather.weather[0].description}</div>\n            <div>Response Time: {responseTime} ms</div>\n            <div>\n                <select value={city} onChange={e => setCity(e.target.value)}>\n                    {cities.map(cityName => (\n                        <option key={cityName} value={cityName}>\n                            {cityName}\n                        </option>\n                    ))}\n                </select>\n                <button onClick={() => fetchWeather(false)}>Get Data from Cache</button>\n                <button onClick={() => fetchWeather(true)}>Get Data from Source API</button>\n            </div>\n            {/* Show/Hide Code button */}\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'flex-start', marginTop: '10px' }}>\n        <button className=\"code-button\" onClick={toggleCode} style={{ flex: 1 }}>\n          {showCode ? \"Hide the Code\" : \"Show the Code\"}\n        </button>\n      </div>\n  \n      {showCode && (\n        <div className=\"code-container\" style={{ marginTop: '10px',width: '100%' }}>\n        <pre>\n            <code style={{ marginTop: '10px',width: 'auto', whiteSpace: 'pre-wrap', overflowWrap: 'anywhere'  }}>\n                            {`\n// Fetch the counter value from Redis\napp.get('/counter', (req, res) => {\n    client.get('counter', (err, reply) => {\n        if (err) return res.status(500).json({ error: 'Failed to fetch counter' });\n        res.json({ value: parseInt(reply || '0', 10) });\n    });\n});\n\n// Increment the counter using Redis INCR\napp.post('/increment', (req, res) => {\n    client.incr('counter', (err, reply) => {\n        if (err) return res.status(500).json({ error: 'Failed to increment counter' });\n        res.json({ value: parseInt(reply, 10) });\n    });\n});\n\n// Decrement the counter using Redis DECR\napp.post('/decrement', (req, res) => {\n    client.decr('counter', (err, reply) => {\n        if (err) return res.status(500).json({ error: 'Failed to decrement counter' });\n        res.json({ value: parseInt(reply, 10) });\n    });\n});\n\n                            `}\n                        </code>\n                    </pre>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default ApiCaching;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}