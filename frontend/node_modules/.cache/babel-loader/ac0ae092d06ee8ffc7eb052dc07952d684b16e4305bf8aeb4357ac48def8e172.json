{"ast":null,"code":"var _jsxFileName = \"/home/y4n/React_Apps/tool-box/frontend/src/components/ApiCaching.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ApiCaching() {\n  _s();\n  var _weather$main;\n  const [weather, setWeather] = useState({});\n  const [city, setCity] = useState(\"Paris\"); // default to the capital of Russia\n  const [responseTime, setResponseTime] = useState(null);\n  const cities = [\"Paris\",\n  // France\n  \"Ottawa\",\n  // Canada\n  \"Beijing\",\n  // China\n  \"New Delhi\",\n  // India\n  \"Canberra\",\n  // Australia\n  \"BrasÃ­lia\",\n  // Brazil\n  \"Astana\",\n  // Kazakhstan\n  \"Buenos Aires\",\n  // Argentina\n  \"Algiers\",\n  // Algeria\n  \"Riyadh\" // Saudi Arabia\n  ];\n\n  function kelvinToCelsius(kelvin) {\n    return kelvin - 273.15;\n  }\n\n  // New state for showing or hiding the code\n  const [showCode, setShowCode] = useState(false);\n\n  // Function to toggle the visibility of the code block\n  const toggleCode = () => {\n    setShowCode(prevState => !prevState);\n  };\n  const fetchWeather = async (fromSource = false) => {\n    const startTime = new Date().getTime();\n    try {\n      const response = await axios.get(`http://localhost:3001/weather?city=${city}${fromSource ? '&source=true' : ''}`);\n      const endTime = new Date().getTime();\n      setResponseTime(endTime - startTime);\n      setWeather(response.data);\n    } catch (error) {\n      console.error('Failed to fetch weather:', error);\n    }\n  };\n  const clearCityCache = async () => {\n    try {\n      await axios.delete(`http://localhost:3001/cache?city=${city}`);\n      console.log(`Cache for ${city} cleared`);\n    } catch (error) {\n      console.error('Failed to clear cache:', error);\n    }\n  };\n\n  // New styles\n  const inputStyle = {\n    padding: '10px',\n    borderRadius: '5px',\n    margin: '0 10px 20px 0',\n    fontSize: '18px',\n    width: 'calc(50% - 10px)'\n  };\n  const buttonStyle = {\n    padding: '10px 15px',\n    borderRadius: '5px',\n    backgroundColor: '#3498db',\n    color: 'white',\n    border: 'none',\n    cursor: 'pointer',\n    margin: '10px 5px'\n  };\n  const titleStyle = {\n    borderBottom: '2px solid #3498db',\n    paddingBottom: '10px',\n    marginTop: '20px'\n  };\n  const infoStyle = {\n    fontSize: '20px',\n    display: 'flex',\n    alignItems: 'center'\n  };\n  const dataStyle = {\n    fontSize: '20px',\n    color: '#007BFF',\n    marginLeft: '10px'\n  };\n  const buttonStyleCode = {\n    padding: '10px 15px',\n    borderRadius: '5px',\n    backgroundColor: '#3a3a3a',\n    color: 'white',\n    border: 'none',\n    cursor: 'pointer',\n    marginRight: '10px'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: titleStyle,\n      children: [\"Weather for \", weather.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: infoStyle,\n      children: [\"Temperature: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: dataStyle,\n        children: [kelvinToCelsius((_weather$main = weather.main) === null || _weather$main === void 0 ? void 0 : _weather$main.temp).toFixed(2), \" \\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: infoStyle,\n      children: [\"Description: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: dataStyle,\n        children: weather.weather && weather.weather[0] && weather.weather[0].description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 49\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: infoStyle,\n      children: [\"Response Time: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: dataStyle,\n        children: [responseTime, \" ms\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 51\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        style: {\n          ...inputStyle,\n          width: 'auto',\n          fontSize: '20px'\n        },\n        value: city,\n        onChange: e => setCity(e.target.value),\n        children: cities.map(cityName => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: cityName,\n          children: cityName\n        }, cityName, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => fetchWeather(false),\n        children: \"Get Data from Cache\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: () => fetchWeather(true),\n        children: \"Get Data from Source API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: buttonStyle,\n        onClick: clearCityCache,\n        children: \"Clear City Cache\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        marginBottom: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"code-button\",\n        onClick: toggleCode,\n        style: buttonStyleCode,\n        children: showCode ? \"Hide the Code\" : \"Show the Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), showCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-container\",\n      style: {\n        width: '100%',\n        marginBottom: '20px',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          padding: '20px',\n          borderRadius: '8px',\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n          whiteSpace: 'pre-wrap',\n          overflowWrap: 'anywhere',\n          background: '#f7f7f7'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `////////////////////////////////////////////// API Caching OPENWEATHER\n\napp.get('/weather', async (req, res) => {\n    console.log(\"Received request for weather data.\");\n    const city = req.query.city || 'Seattle';\n\n    if (req.query.source === 'true') {\n        // Fetch directly from OpenWeather API without checking cache\n        try {\n            console.log(\"Fetching data directly from OpenWeather API...\");\n            let weatherResponse = await axios.get(https://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY});\n            res.json(weatherResponse.data);\n            return;\n        } catch (error) {\n            console.error(\"Failed to fetch from OpenWeather API:\", error.message);\n            res.status(500).json({ error: \"Failed to fetch weather data\" });\n            return;\n        }\n    }\n\n    // Check cache first\n    redisClient.get(city, async (err, data) => {\n        if (err) throw err;\n\n        if (data !== null) {\n            console.log(\"Serving data from cache.\");\n            res.json(JSON.parse(data));\n        } else {\n            try {\n                console.log(\"Fetching data from OpenWeather API...\");\n                let weatherResponse = await axios.get(https://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY});\n                redisClient.setex(city, 300, JSON.stringify(weatherResponse.data));\n                res.json(weatherResponse.data);\n            } catch (error) {\n                console.error(\"Failed to fetch from OpenWeather API:\", error.message);\n                res.status(500).json({ error: \"Failed to fetch weather data\" });\n            }\n        }\n    });\n});\n\napp.delete('/cache', (req, res) => {\n    const city = req.query.city;\n\n    redisClient.del(city, (err, reply) => {\n        if (err) {\n            console.error(\"Error clearing cache:\", err);\n            res.status(500).json({ error: \"Failed to clear cache\" });\n            return;\n        }\n        \n        if (reply === 1) {\n            console.log(Cache for {city} cleared);\n            res.json({ message: Cache for {city} cleared });\n        } else {\n            console.log(No cache found for {city});\n            res.status(404).json({ message: No cache found for {city} });\n        }\n    });\n});\n    //////////////////////////////////////////////;`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 9\n  }, this);\n}\n_s(ApiCaching, \"3pGyRuA6YbTrjM6go/FIs246qmg=\");\n_c = ApiCaching;\nexport default ApiCaching;\nvar _c;\n$RefreshReg$(_c, \"ApiCaching\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ApiCaching","_s","_weather$main","weather","setWeather","city","setCity","responseTime","setResponseTime","cities","kelvinToCelsius","kelvin","showCode","setShowCode","toggleCode","prevState","fetchWeather","fromSource","startTime","Date","getTime","response","get","endTime","data","error","console","clearCityCache","delete","log","inputStyle","padding","borderRadius","margin","fontSize","width","buttonStyle","backgroundColor","color","border","cursor","titleStyle","borderBottom","paddingBottom","marginTop","infoStyle","display","alignItems","dataStyle","marginLeft","buttonStyleCode","marginRight","children","style","name","fileName","_jsxFileName","lineNumber","columnNumber","main","temp","toFixed","description","value","onChange","e","target","map","cityName","onClick","justifyContent","marginBottom","className","boxShadow","whiteSpace","overflowWrap","background","_c","$RefreshReg$"],"sources":["/home/y4n/React_Apps/tool-box/frontend/src/components/ApiCaching.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\n\nfunction ApiCaching() {\n    const [weather, setWeather] = useState({});\n    const [city, setCity] = useState(\"Paris\"); // default to the capital of Russia\n    const [responseTime, setResponseTime] = useState(null);\n\n    const cities = [\n        \"Paris\",        // France\n        \"Ottawa\",       // Canada\n        \"Beijing\",      // China\n        \"New Delhi\",    // India\n        \"Canberra\",     // Australia\n        \"BrasÃ­lia\",     // Brazil\n        \"Astana\",       // Kazakhstan\n        \"Buenos Aires\", // Argentina\n        \"Algiers\",      // Algeria\n        \"Riyadh\"        // Saudi Arabia\n    ];\n\n    function kelvinToCelsius(kelvin) {\n        return kelvin - 273.15;\n    }\n\n// New state for showing or hiding the code\nconst [showCode, setShowCode] = useState(false);\n\n// Function to toggle the visibility of the code block\nconst toggleCode = () => {\n    setShowCode(prevState => !prevState);\n}\n\n    const fetchWeather = async (fromSource = false) => {\n        const startTime = new Date().getTime();\n\n        try {\n            const response = await axios.get(`http://localhost:3001/weather?city=${city}${fromSource ? '&source=true' : ''}`);\n            \n            const endTime = new Date().getTime();\n            setResponseTime(endTime - startTime);\n\n            setWeather(response.data);\n        } catch (error) {\n            console.error('Failed to fetch weather:', error);\n        }\n    };\n\n    const clearCityCache = async () => {\n        try {\n            await axios.delete(`http://localhost:3001/cache?city=${city}`);\n            console.log(`Cache for ${city} cleared`);\n        } catch (error) {\n            console.error('Failed to clear cache:', error);\n        }\n    };\n\n    // New styles\n    const inputStyle = {\n        padding: '10px',\n        borderRadius: '5px',\n        margin: '0 10px 20px 0',\n        fontSize: '18px',\n        width: 'calc(50% - 10px)'\n    };\n\n    const buttonStyle = {\n        padding: '10px 15px',\n        borderRadius: '5px',\n        backgroundColor: '#3498db',\n        color: 'white',\n        border: 'none',\n        cursor: 'pointer',\n        margin: '10px 5px'\n    };\n\n    const titleStyle = {\n        borderBottom: '2px solid #3498db',\n        paddingBottom: '10px',\n        marginTop: '20px'\n    };\n\n    const infoStyle = {\n        fontSize: '20px',\n        display: 'flex',\n        alignItems: 'center'\n    };\n\n    const dataStyle = {\n        fontSize: '20px',\n        color: '#007BFF',\n        marginLeft: '10px'\n    };\n\n    const buttonStyleCode = {\n        padding: '10px 15px',\n        borderRadius: '5px',\n        backgroundColor: '#3a3a3a',\n        color: 'white',\n        border: 'none',\n        cursor: 'pointer',\n        marginRight: '10px'\n    };\n\n    return (\n        <div>\n            <h3 style={titleStyle}>Weather for {weather.name}</h3>\n            <div style={infoStyle}>Temperature: <span style={dataStyle}>{kelvinToCelsius(weather.main?.temp).toFixed(2)} Â°C</span></div>\n            <div style={infoStyle}>Description: <span style={dataStyle}>{weather.weather && weather.weather[0] && weather.weather[0].description}</span></div>\n            <div style={infoStyle}>Response Time: <span style={dataStyle}>{responseTime} ms</span></div>\n            <div>\n                <select style={{ ...inputStyle, width: 'auto', fontSize: '20px'}} value={city} onChange={e => setCity(e.target.value)}>\n                    {cities.map(cityName => (\n                        <option key={cityName} value={cityName}>\n                            {cityName}\n                        </option>\n                    ))}\n                </select>\n                <button style={buttonStyle} onClick={() => fetchWeather(false)}>Get Data from Cache</button>\n                <button style={buttonStyle} onClick={() => fetchWeather(true)}>Get Data from Source API</button>\n                <button style={buttonStyle} onClick={clearCityCache}>Clear City Cache</button>\n            </div>\n            \n           {/* Show/Hide Code button */}\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>\n          <button className=\"code-button\" onClick={toggleCode} style={buttonStyleCode}>\n              {showCode ? \"Hide the Code\" : \"Show the Code\"}\n          </button>\n      </div>\n\n      {showCode && (\n    <div className=\"code-container\" style={{ width: '100%', marginBottom: '20px', marginTop: '20px' }}>\n        <pre style={{ padding: '20px', borderRadius: '8px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', whiteSpace: 'pre-wrap', overflowWrap: 'anywhere', background: '#f7f7f7' }}>\n            <code>\n{`////////////////////////////////////////////// API Caching OPENWEATHER\n\napp.get('/weather', async (req, res) => {\n    console.log(\"Received request for weather data.\");\n    const city = req.query.city || 'Seattle';\n\n    if (req.query.source === 'true') {\n        // Fetch directly from OpenWeather API without checking cache\n        try {\n            console.log(\"Fetching data directly from OpenWeather API...\");\n            let weatherResponse = await axios.get(https://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY});\n            res.json(weatherResponse.data);\n            return;\n        } catch (error) {\n            console.error(\"Failed to fetch from OpenWeather API:\", error.message);\n            res.status(500).json({ error: \"Failed to fetch weather data\" });\n            return;\n        }\n    }\n\n    // Check cache first\n    redisClient.get(city, async (err, data) => {\n        if (err) throw err;\n\n        if (data !== null) {\n            console.log(\"Serving data from cache.\");\n            res.json(JSON.parse(data));\n        } else {\n            try {\n                console.log(\"Fetching data from OpenWeather API...\");\n                let weatherResponse = await axios.get(https://api.openweathermap.org/data/2.5/weather?q={city}&appid={OPENWEATHER_API_KEY});\n                redisClient.setex(city, 300, JSON.stringify(weatherResponse.data));\n                res.json(weatherResponse.data);\n            } catch (error) {\n                console.error(\"Failed to fetch from OpenWeather API:\", error.message);\n                res.status(500).json({ error: \"Failed to fetch weather data\" });\n            }\n        }\n    });\n});\n\napp.delete('/cache', (req, res) => {\n    const city = req.query.city;\n\n    redisClient.del(city, (err, reply) => {\n        if (err) {\n            console.error(\"Error clearing cache:\", err);\n            res.status(500).json({ error: \"Failed to clear cache\" });\n            return;\n        }\n        \n        if (reply === 1) {\n            console.log(Cache for {city} cleared);\n            res.json({ message: Cache for {city} cleared });\n        } else {\n            console.log(No cache found for {city});\n            res.status(404).json({ message: No cache found for {city} });\n        }\n    });\n});\n    //////////////////////////////////////////////;`}\n            </code>\n        </pre>\n    </div>\n)}\n\n\n  </div>\n);\n\n}\n\nexport default ApiCaching;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}