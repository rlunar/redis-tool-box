{"ast":null,"code":"var _jsxFileName = \"/home/y4n/React_Apps/tool-box/frontend/src/components/Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Cart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst titleStyle = {\n  borderBottom: '2px solid #3498db',\n  paddingBottom: '10px',\n  marginTop: '20px'\n};\nfunction Cart({\n  selectedSeats,\n  onSeatsSelected\n}) {\n  _s();\n  const [cart, setCart] = useState({});\n  const [totalPrice, setTotalPrice] = useState(0);\n\n  // New state for showing or hiding the code\n  const [showCode, setShowCode] = useState(false);\n\n  // Function to toggle the visibility of the code block\n  const toggleCode = () => {\n    setShowCode(prevState => !prevState);\n  };\n  useEffect(() => {\n    fetchCartData();\n  }, []);\n  const fetchCartData = async () => {\n    try {\n      const response = await axios.get('http://localhost:3001/fetchCartItems');\n      if (response.data) {\n        setCart(response.data);\n        const total = Object.values(response.data).reduce((acc, curr) => acc + parseFloat(curr), 0);\n        setTotalPrice(total);\n      }\n    } catch (error) {\n      console.error(\"Error fetching cart data:\", error);\n    }\n  };\n  const addToCart = async () => {\n    try {\n      await axios.post('http://localhost:3001/addToCart', {\n        seats: selectedSeats\n      });\n      fetchCartData(); // Refetch cart data after adding\n      onSeatsSelected([]); // Clear the selected seats after adding to cart\n    } catch (error) {\n      console.error(\"Error adding to cart:\", error);\n    }\n  };\n  const removeFromCart = seat => {\n    axios.post('http://localhost:3001/removeFromCart', {\n      seat\n    }).then(fetchCartData) // refresh the cart after removing a seat\n    .catch(error => {\n      console.error(\"Error removing from cart:\", error);\n    });\n  };\n  const emptyCart = () => {\n    axios.post('http://localhost:3001/emptyCart').then(response => {\n      console.log(response.data);\n      fetchCartData(); // refresh the cart after emptying it\n    }).catch(error => {\n      console.error(\"Error emptying the cart:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cart-container\",\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: titleStyle,\n      children: \"Your Cart \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"(Limited to 4 seats)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 51\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.entries(cart).map(([seat, price]) => {\n        const seatNumber = parseInt(seat.replace('seat', ''));\n        const formattedSeatNumber = seatNumber < 10 ? `0${seatNumber}` : seatNumber;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cart-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Quantity 1 - Seat : \", formattedSeatNumber, \" - Available for 1 movie - Price: \", price, \" $ \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"cart-button\",\n            onClick: () => removeFromCart(seat),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this)]\n        }, seat, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Total Price: $\", totalPrice.toFixed(2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"\",\n      onClick: addToCart,\n      children: \"Add to Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"\",\n      onClick: emptyCart,\n      children: \"Empty Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), showCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"code-container\",\n      style: {\n        width: '100%',\n        marginBottom: '20px',\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          padding: '20px',\n          borderRadius: '8px',\n          boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',\n          whiteSpace: 'pre-wrap',\n          overflowWrap: 'anywhere',\n          background: '#f7f7f7'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: `/////////////////////////////////////////////// Seating Map\n// Get the bitmap representation\napp.get('/seating', (req, res) => {\n    client.get('seats', (err, reply) => {\n        if (err) return res.status(500).json({ error: 'Failed to fetch seats' });\n        const bitmap = reply ? parseInt(reply, 2) : 0; // Convert binary string to integer\n        res.json({ bitmap });\n    });\n});\n\n// Set a seat or deselect\napp.post('/setSeat', (req, res) => {\n    const seatIndex = req.body.seatIndex;\n    client.get('seats', (err, reply) => {\n        if (err) return res.status(500).json({ error: 'Failed to fetch seats' });\n        let bitmap = reply ? parseInt(reply, 2) : 0;\n        \n        // Toggle the bit\n        bitmap ^= (1 << seatIndex);\n        \n        // Check if the number of set bits exceeds 8\n        if (bitmap.toString(2).split('1').length - 1 > 8) {\n            return res.status(400).json({ error: 'Booking is limited to 8 seats maximum.' });\n        }\n\n        client.set('seats', bitmap.toString(2).padStart(16, '0'), (error) => {\n            if (error) return res.status(500).json({ error: 'Failed to update seat' });\n            res.json({ bitmap });\n        });\n    });\n});\n\napp.post('/emptySelection', (req, res) => {\n    client.set('seats', '0000000000000000', (err) => {\n        if (err) {\n            res.status(500).json({ error: \"Failed to reset the seats\" });\n        } else {\n            res.json({ message: \"Seats reset successfully\" });\n        }\n    });\n});\n\n\n//////////////////////////////////////////////;`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n}\n_s(Cart, \"nVgH6I4PsCApdaTrKa8PVY5EavY=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","titleStyle","borderBottom","paddingBottom","marginTop","Cart","selectedSeats","onSeatsSelected","_s","cart","setCart","totalPrice","setTotalPrice","showCode","setShowCode","toggleCode","prevState","fetchCartData","response","get","data","total","Object","values","reduce","acc","curr","parseFloat","error","console","addToCart","post","seats","removeFromCart","seat","then","catch","emptyCart","log","className","style","width","children","fileName","_jsxFileName","lineNumber","columnNumber","entries","map","price","seatNumber","parseInt","replace","formattedSeatNumber","onClick","toFixed","marginBottom","padding","borderRadius","boxShadow","whiteSpace","overflowWrap","background","_c","$RefreshReg$"],"sources":["/home/y4n/React_Apps/tool-box/frontend/src/components/Cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Cart.css';\n\n\nconst titleStyle = {\n    borderBottom: '2px solid #3498db',\n    paddingBottom: '10px',\n    marginTop: '20px'\n};\n\n\nfunction Cart({ selectedSeats, onSeatsSelected }) {\n    const [cart, setCart] = useState({});\n    const [totalPrice, setTotalPrice] = useState(0);\n\n// New state for showing or hiding the code\nconst [showCode, setShowCode] = useState(false);\n\n// Function to toggle the visibility of the code block\nconst toggleCode = () => {\n    setShowCode(prevState => !prevState);\n}\n\n    useEffect(() => {\n        fetchCartData();\n    }, []);\n\n    const fetchCartData = async () => {\n        try {\n            const response = await axios.get('http://localhost:3001/fetchCartItems');\n            if (response.data) {\n                setCart(response.data);\n                const total = Object.values(response.data).reduce((acc, curr) => acc + parseFloat(curr), 0);\n                setTotalPrice(total);\n            }\n        } catch (error) {\n            console.error(\"Error fetching cart data:\", error);\n        }\n    };\n\n    const addToCart = async () => {\n        try {\n            await axios.post('http://localhost:3001/addToCart', { seats: selectedSeats });\n            fetchCartData();  // Refetch cart data after adding\n            onSeatsSelected([]); // Clear the selected seats after adding to cart\n        } catch (error) {\n            console.error(\"Error adding to cart:\", error);\n        }\n    };\n    \n    const removeFromCart = (seat) => {\n        axios.post('http://localhost:3001/removeFromCart', { seat })\n            .then(fetchCartData) // refresh the cart after removing a seat\n            .catch(error => {\n                console.error(\"Error removing from cart:\", error);\n            });\n    };\n\n    const emptyCart = () => {\n        axios.post('http://localhost:3001/emptyCart')\n            .then(response => {\n                console.log(response.data);\n                fetchCartData(); // refresh the cart after emptying it\n            })\n            .catch(error => {\n                console.error(\"Error emptying the cart:\", error);\n            });\n    };\n\n\n    return (\n        <div className=\"cart-container\" style={{ width: '100%', }}>\n            <h3 style={titleStyle}>Your Cart </h3><p>(Limited to 4 seats)</p>\n              {/* Added styled header */}\n            \n            <ul>\n                {\n                    Object.entries(cart).map(([seat, price]) => {\n                        const seatNumber = parseInt(seat.replace('seat', ''));\n                        const formattedSeatNumber = seatNumber < 10 ? `0${seatNumber}` : seatNumber;\n                        return (\n                            <div key={seat} className=\"cart-item\">\n                                <span>Quantity 1 - Seat : {formattedSeatNumber} - Available for 1 movie - Price: {price} $ </span>\n                                <button className=\"cart-button\" onClick={() => removeFromCart(seat)}>Remove</button>\n                            </div>\n                        );\n                    })\n                }\n            </ul>\n            <div>\n                Total Price: ${totalPrice.toFixed(2)}\n            </div>\n            <button className=\"\" onClick={addToCart}>Add to Cart</button>\n            <button className=\"\" onClick={emptyCart}>Empty Cart</button>\n            {showCode && (\n    <div className=\"code-container\" style={{ width: '100%', marginBottom: '20px', marginTop: '20px' }}>\n        <pre style={{ padding: '20px', borderRadius: '8px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', whiteSpace: 'pre-wrap', overflowWrap: 'anywhere', background: '#f7f7f7' }}>\n            <code>\n{`/////////////////////////////////////////////// Seating Map\n// Get the bitmap representation\napp.get('/seating', (req, res) => {\n    client.get('seats', (err, reply) => {\n        if (err) return res.status(500).json({ error: 'Failed to fetch seats' });\n        const bitmap = reply ? parseInt(reply, 2) : 0; // Convert binary string to integer\n        res.json({ bitmap });\n    });\n});\n\n// Set a seat or deselect\napp.post('/setSeat', (req, res) => {\n    const seatIndex = req.body.seatIndex;\n    client.get('seats', (err, reply) => {\n        if (err) return res.status(500).json({ error: 'Failed to fetch seats' });\n        let bitmap = reply ? parseInt(reply, 2) : 0;\n        \n        // Toggle the bit\n        bitmap ^= (1 << seatIndex);\n        \n        // Check if the number of set bits exceeds 8\n        if (bitmap.toString(2).split('1').length - 1 > 8) {\n            return res.status(400).json({ error: 'Booking is limited to 8 seats maximum.' });\n        }\n\n        client.set('seats', bitmap.toString(2).padStart(16, '0'), (error) => {\n            if (error) return res.status(500).json({ error: 'Failed to update seat' });\n            res.json({ bitmap });\n        });\n    });\n});\n\napp.post('/emptySelection', (req, res) => {\n    client.set('seats', '0000000000000000', (err) => {\n        if (err) {\n            res.status(500).json({ error: \"Failed to reset the seats\" });\n        } else {\n            res.json({ message: \"Seats reset successfully\" });\n        }\n    });\n});\n\n\n//////////////////////////////////////////////;`}\n            </code>\n        </pre>\n    </div>\n)}\n\n\n        </div>\n    );\n}\n\n\n\nexport default Cart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}