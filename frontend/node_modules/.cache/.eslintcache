[{"/Users/yannrich/dev/React/tool-box/frontend/src/index.js":"1","/Users/yannrich/dev/React/tool-box/frontend/src/reportWebVitals.js":"2","/Users/yannrich/dev/React/tool-box/frontend/src/App.js":"3","/Users/yannrich/dev/React/tool-box/frontend/src/components/CounterSS.js":"4","/Users/yannrich/dev/React/tool-box/frontend/src/components/Monitor.js":"5","/Users/yannrich/dev/React/tool-box/frontend/src/components/Counter.js":"6","/Users/yannrich/dev/React/tool-box/frontend/src/components/Intersection.js":"7","/Users/yannrich/dev/React/tool-box/frontend/src/components/ApiCaching.js":"8","/Users/yannrich/dev/React/tool-box/frontend/src/components/UserContext.js":"9","/Users/yannrich/dev/React/tool-box/frontend/src/components/Cart.js":"10","/Users/yannrich/dev/React/tool-box/frontend/src/components/SeatingMap.js":"11","/Users/yannrich/dev/React/tool-box/frontend/src/components/Users.js":"12","/Users/yannrich/dev/React/tool-box/frontend/src/components/GeoSpatialMap.js":"13"},{"size":539,"mtime":1694630084294,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1694630084294,"results":"16","hashOfConfig":"15"},{"size":4081,"mtime":1694637410772,"results":"17","hashOfConfig":"15"},{"size":9566,"mtime":1694630084293,"results":"18","hashOfConfig":"15"},{"size":5826,"mtime":1694630084293,"results":"19","hashOfConfig":"15"},{"size":4945,"mtime":1694630084292,"results":"20","hashOfConfig":"15"},{"size":9465,"mtime":1694633221803,"results":"21","hashOfConfig":"15"},{"size":7099,"mtime":1694630084292,"results":"22","hashOfConfig":"15"},{"size":1187,"mtime":1694630084293,"results":"23","hashOfConfig":"15"},{"size":8024,"mtime":1694636249086,"results":"24","hashOfConfig":"15"},{"size":7328,"mtime":1694639671066,"results":"25","hashOfConfig":"15"},{"size":11092,"mtime":1694630084293,"results":"26","hashOfConfig":"15"},{"size":9352,"mtime":1694638944942,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"3i831g",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/yannrich/dev/React/tool-box/frontend/src/index.js",[],[],[],"/Users/yannrich/dev/React/tool-box/frontend/src/reportWebVitals.js",[],[],"/Users/yannrich/dev/React/tool-box/frontend/src/App.js",["69"],[],"/Users/yannrich/dev/React/tool-box/frontend/src/components/CounterSS.js",[],[],"/Users/yannrich/dev/React/tool-box/frontend/src/components/Monitor.js",[],[],"/Users/yannrich/dev/React/tool-box/frontend/src/components/Counter.js",[],[],"/Users/yannrich/dev/React/tool-box/frontend/src/components/Intersection.js",["70","71","72"],[],"/Users/yannrich/dev/React/tool-box/frontend/src/components/ApiCaching.js",[],[],"/Users/yannrich/dev/React/tool-box/frontend/src/components/UserContext.js",[],[],"/Users/yannrich/dev/React/tool-box/frontend/src/components/Cart.js",[],[],"/Users/yannrich/dev/React/tool-box/frontend/src/components/SeatingMap.js",["73"],[],"/Users/yannrich/dev/React/tool-box/frontend/src/components/Users.js",["74","75"],[],"import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useUsers } from './UserContext';\nimport Intersection from './Intersection'; // Import the Intersection component\n\n\nconst titleStyle = {\n    borderBottom: '2px solid #3498db',\n    paddingBottom: '10px',\n    marginTop: '20px'\n};\n\nconst inputStyle = {\n    margin: '10px',\n    padding: '10px',\n    fontSize: '16px'\n};\n\nconst buttonStyle = {\n    padding: '10px 15px',\n    borderRadius: '5px',\n    backgroundColor: '#3498db',\n    color: 'white',\n    border: 'none',\n    cursor: 'pointer'\n};\n\nconst inputFieldContainerStyle = {\n    marginBottom: '15px',\n    display: 'flex',\n    alignItems: 'center',\n};\n\nconst inputLabelStyle = {\n    minWidth: '100px',\n    marginRight: '10px',\n    fontWeight: 'bold',\n};\n\nconst buttonStyleCode = {\n    padding: '10px 15px',\n    borderRadius: '5px',\n    backgroundColor: '#3a3a3a',\n    color: 'white',\n    border: 'none',\n    cursor: 'pointer',\n    marginRight: '10px'\n};\n\n\nfunction Users() {\n    const { users, setUsers, onlineUsers, setOnlineUsers } = useUsers();\n    const [onlinePremiumUsers, setOnlinePremiumUsers] = useState([]); // State for online premium users\n    const [username, setUsername] = useState('');\n    const [firstName, setFirstName] = useState('');\n    const [lastName, setLastName] = useState('');\n    const [premium, setPremium] = useState('No');\n    const [geo, setGeo] = useState('Africa');\n\n    useEffect(() => {\n        async function fetchUsers() {\n            try {\n                const response = await axios.get('http://localhost:3001/users');\n                setUsers(response.data);\n            } catch (error) {\n                console.error(\"Error fetching users\", error);\n            }\n        }\n\n        fetchUsers();\n    }, [setUsers]);\n\n    // New state for showing or hiding the code\nconst [showCode, setShowCode] = useState(false);\n\n// Function to toggle the visibility of the code block\nconst toggleCode = () => {\n    setShowCode(prevState => !prevState);\n}\n\n    const addUserHandler = async () => {\n        try {\n            const newUser = { username, firstName, lastName, premium, geo };\n            const response = await axios.post('http://localhost:3001/users', newUser);\n            if (response.data) {\n                setUsers(prevUsers => [...prevUsers, response.data]);\n            }\n\n            // Reset fields\n            setUsername('');\n            setFirstName('');\n            setLastName('');\n            setPremium('No');\n            setGeo('Africa');\n        } catch (error) {\n            console.error(\"Error adding user\", error);\n        }\n    };\n\n    const deleteUserHandler = async (userId) => {\n        try {\n            const response = await axios.delete(`http://localhost:3001/users/${userId}`);\n            if (response.status === 200) {\n                setUsers(prevUsers => prevUsers.filter(user => user.userId !== userId));\n\n                if (onlineUsers.includes(userId)) {\n                    setOnlineUsers(prevOnlineUsers => prevOnlineUsers.filter(id => id !== userId));\n                }\n\n                // Remove the deleted user from onlinePremiumUsers as well\n                setOnlinePremiumUsers(prevOnlinePremiumUsers => prevOnlinePremiumUsers.filter(id => id !== userId));\n            }\n        } catch (error) {\n            console.error(\"Error deleting user\", error);\n        }\n    };\n    \n\n    return (\n        <div>\n     <div>\n    <h3 style={titleStyle}>Add User</h3>\n    <div>\n        <div style={inputFieldContainerStyle}>\n            <label style={inputLabelStyle}>Username:</label>\n            <input style={inputStyle} value={username} placeholder=\"Username\" onChange={(e) => setUsername(e.target.value)} />\n        </div>\n        <div style={inputFieldContainerStyle}>\n            <label style={inputLabelStyle}>First Name:</label>\n            <input style={inputStyle} value={firstName} placeholder=\"First Name\" onChange={(e) => setFirstName(e.target.value)} />\n        </div>\n        <div style={inputFieldContainerStyle}>\n            <label style={inputLabelStyle}>Last Name:</label>\n            <input style={inputStyle} value={lastName} placeholder=\"Last Name\" onChange={(e) => setLastName(e.target.value)} />\n        </div>\n        <div style={inputFieldContainerStyle}>\n            <label style={inputLabelStyle}>Premium:</label>\n            <select style={inputStyle} value={premium} onChange={(e) => setPremium(e.target.value)}>\n                <option value=\"Yes\">Yes</option>\n                <option value=\"No\">No</option>\n            </select>\n        </div>\n        <div style={inputFieldContainerStyle}>\n            <label style={inputLabelStyle}>Geo:</label>\n            <select style={inputStyle} value={geo} onChange={(e) => setGeo(e.target.value)}>\n                <option value=\"Africa\">Africa</option>\n                <option value=\"Asia\">Asia</option>\n                <option value=\"Europe\">Europe</option>\n                <option value=\"North America\">North America</option>\n                <option value=\"South America\">South America</option>\n                <option value=\"Australia\">Australia</option>\n                <option value=\"Antarctica\">Antarctica</option>\n            </select>\n        </div>\n        <button style={buttonStyle} onClick={addUserHandler}>Add User</button>\n    </div>\n</div>\n\n            \n            <div style={{ marginTop: '40px' }}>\n                <h3 style={titleStyle}>User List</h3>\n                <table style={{ margin: '20px', width: '90%', borderCollapse: 'collapse' }}>\n                    <thead>\n                        <tr>\n                            <th style={{ border: '1px solid #dddddd', textAlign: 'left', padding: '8px' }}>Username</th>\n                            <th style={{ border: '1px solid #dddddd', textAlign: 'left', padding: '8px' }}>Name</th>\n                            <th style={{ border: '1px solid #dddddd', textAlign: 'left', padding: '8px' }}>Premium</th>\n                            <th style={{ border: '1px solid #dddddd', textAlign: 'left', padding: '8px' }}>Geo</th>\n                            <th style={{ border: '1px solid #dddddd', textAlign: 'left', padding: '8px' }}>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {users.filter(user => user && user.userId).map(user => (\n                            <tr key={user.userId}>\n                                <td style={{ border: '1px solid #dddddd', textAlign: 'left', padding: '8px' }}>{user.username}</td>\n                                <td style={{ border: '1px solid #dddddd', textAlign: 'left', padding: '8px' }}>{user.firstName} {user.lastName}</td>\n                                <td style={{ border: '1px solid #dddddd', textAlign: 'left', padding: '8px' }}>{user.premium}</td>\n                                <td style={{ border: '1px solid #dddddd', textAlign: 'left', padding: '8px' }}>{user.geo}</td>\n                                <td style={{ border: '1px solid #dddddd', textAlign: 'left', padding: '8px' }}>\n                                    <button style={buttonStyle} onClick={() => deleteUserHandler(user.userId)}>Delete</button>\n                                </td>\n                            </tr>\n                        ))}\n                    </tbody>\n                </table>\n            </div>\n            \n  {/* Show/Hide Code button */}\n  <div style={{ width: '100%', display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>\n          <button className=\"code-button\" onClick={toggleCode} style={buttonStyleCode}>\n              {showCode ? \"Hide the Code\" : \"Show the Code\"}\n          </button>\n      </div>\n\n      {showCode && (\n    <div className=\"code-container\" style={{ width: '100%', marginBottom: '20px', marginTop: '20px' }}>\n        <pre style={{ padding: '20px', borderRadius: '8px', boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)', whiteSpace: 'pre-wrap', overflowWrap: 'anywhere', background: '#f7f7f7' }}>\n            <code>\n{`//////////////////////////////////////////////// Sorted Set counter\n///Add Element to the Sorted Set\napp.post('/addElement', (req, res) => {\n    const { element, score } = req.body;\n    client.zadd('sortedSet', score, element, (err, reply) => {\n        if (err) {\n            res.status(500).send({ error: err.message });\n            return;\n        }\n        res.status(200).send({ added: true });\n    });\n});\n\n///Get All Elements from the Sorted Set\napp.get('/getAllElements', (req, res) => {\n    client.zrange('sortedSet', 0, -1, 'WITHSCORES', (err, elements) => {\n        if (err) {\n            res.status(500).send({ error: err.message });\n            return;\n        }\n        let result = [];\n        for (let i = 0; i < elements.length; i += 2) {\n            result.push({ element: elements[i], score: elements[i + 1] });\n        }\n        res.status(200).send(result);\n    });\n});\n\n///Update Score of an Element\napp.put('/updateScore', (req, res) => {\n    const { element, newScore } = req.body;\n    client.zadd('sortedSet', newScore, element, (err, reply) => {\n        if (err) {\n            res.status(500).send({ error: err.message });\n            return;\n        }\n        res.status(200).send({ updated: true });\n    });\n});\n\n///Fetch Ranked Elements\napp.get('/getRankedElements', (req, res) => {\n    client.zrevrange('sortedSet', 0, -1, 'WITHSCORES', (err, elements) => {\n        if (err) {\n            res.status(500).send({ error: err.message });\n            return;\n        }\n        let result = [];\n        for (let i = 0; i < elements.length; i += 2) {\n            result.push({ element: elements[i], score: elements[i + 1] });\n        }\n        res.status(200).send(result);\n    });\n});\n\napp.delete('/deleteElement', (req, res) => {\n    const { element } = req.body;\n\n    client.zrem('sortedSet', element, (err, response) => {\n        if (err) {\n            return res.status(500).json({ message: \"Error deleting element\", error: err.message });\n        }\n        res.json({ message: \"Element deleted successfully\" });\n    });\n});\n\n\napp.get('/getRanking', async (req, res) => {\n    try {\n        const ranking = await getRankingFromRedis();\n        res.status(200).json(ranking);\n    } catch (error) {\n        console.error(\"Error:\", error);  // This will print the error details in the backend console\n        res.status(500).json({ message: \"Error fetching ranking\", error: error.message });\n    }\n    \n});\n\nconst getRankingFromRedis = async () => {\n    return new Promise((resolve, reject) => {\n        client.zrevrange('sortedSet', 0, -1, 'WITHSCORES', (err, result) => {\n            if (err) return reject(err);\n\n            let ranking = [];\n            for (let i = 0; i < result.length; i += 2) {\n                ranking.push({\n                    element: result[i],\n                    score: result[i + 1]\n                });\n            }\n            resolve(ranking);\n        });\n    });\n};\n\n\n//////////////////////////////////////////////`}\n            </code>\n        </pre>\n    </div>\n)}\n\n\n  </div>    );\n}\n\nexport default Users;\n","/Users/yannrich/dev/React/tool-box/frontend/src/components/GeoSpatialMap.js",["76"],[],{"ruleId":"77","severity":1,"message":"78","line":19,"column":25,"nodeType":"79","messageId":"80","endLine":19,"endColumn":41},{"ruleId":"81","severity":1,"message":"82","line":47,"column":8,"nodeType":"83","endLine":47,"endColumn":34,"suggestions":"84"},{"ruleId":"77","severity":1,"message":"85","line":88,"column":23,"nodeType":"79","messageId":"80","endLine":88,"endColumn":43},{"ruleId":"86","severity":1,"message":"87","line":134,"column":9,"nodeType":"88","messageId":"89","endLine":134,"endColumn":14},{"ruleId":"77","severity":1,"message":"90","line":102,"column":15,"nodeType":"79","messageId":"80","endLine":102,"endColumn":30},{"ruleId":"77","severity":1,"message":"91","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":20},{"ruleId":"77","severity":1,"message":"92","line":53,"column":12,"nodeType":"79","messageId":"80","endLine":53,"endColumn":30},{"ruleId":"93","severity":1,"message":"94","line":183,"column":11,"nodeType":"95","endLine":183,"endColumn":34},"no-unused-vars","'setSelectedSeats' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onlineUsers'. Either include it or remove the dependency array.","ArrayExpression",["96"],"'onlinePremiumUserIds' is assigned a value but never used.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","'handleAddToCart' is assigned a value but never used.","'Intersection' is defined but never used.","'onlinePremiumUsers' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",{"desc":"97","fix":"98"},"Update the dependencies array to be: [setUsers, setOnlineUsers, onlineUsers]",{"range":"99","text":"100"},[1862,1888],"[setUsers, setOnlineUsers, onlineUsers]"]